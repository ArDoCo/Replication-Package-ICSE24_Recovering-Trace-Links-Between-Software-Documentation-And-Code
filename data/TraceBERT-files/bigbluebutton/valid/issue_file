,closed_at,created_at,issue_comments,issue_desc,issue_id
0,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
4,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
5,,,,This UI is a single HTML page generated by Angular framework.,teammates5
6,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
7,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
8,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
9,,,,Sanitizing input values received from the UI component.,teammates81
10,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
11,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
12,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
13,,,,This UI is a single HTML page generated by Angular framework.,teammates5
14,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
15,,,,We use an event bus to publish events from the model to the other layers.,jabref12
16,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
17,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
18,,,,storage.api provides the API of the component to be accessed by the logic component.,teammates131
19,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
20,,,,"By limiting it to a single registry instance, it enables easy configuration of multiple parallel TeaStores with minimal configuration overhead.",TeaStore43
21,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
22,,,,The diagram below shows the object structure of the UI component.,teammates25
23,,,,This UI is a single HTML page generated by Angular framework.,teammates5
24,,,,common.exceptions contains custom exceptions.,teammates158
25,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
26,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
27,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
28,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
29,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
30,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
31,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
32,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
33,,,,Hiding the complexities of datastore from the Logic component.,teammates122
34,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
35,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
36,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
37,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
38,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
39,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
40,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
41,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
42,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
43,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
44,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
45,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
46,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
47,,,,This UI is a single HTML page generated by Angular framework.,teammates5
48,,,,The Client component can connect to the back end directly without using a Web browser.,teammates18
49,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
50,,,,"Logic API is represented by the classes Logic, GateKeeper, EmailGenerator, EmailSender, TaskQueuer.",teammates87
51,,,,Sanitizing input values received from the UI component.,teammates81
52,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
53,,,,This UI is a single HTML page generated by Angular framework.,teammates5
54,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
55,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
56,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
57,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
58,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
59,,,,storage.search contains classes for dealing with searching and indexing.,teammates133
60,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
61,,,,"Seventh, the corresponding AutomatedAction will be performed, interacting with the Logic component as necessary.",teammates68
62,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
63,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
64,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
65,,,,"Package overview contains logic.api, logic.core.",teammates84
66,,,,"If the action is allowed, it will be performed, interacting with the Logic component as necessary.",teammates47
67,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
68,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
69,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
70,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
71,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
72,,,,This UI is a single HTML page generated by Angular framework.,teammates5
73,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
74,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
75,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
76,,,,"In particular, it is reponsible for the following.",teammates120
77,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
78,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
79,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
80,,,,This UI is a single HTML page generated by Angular framework.,teammates5
81,,,,x.webapi contains system test cases for testing the user-invoked actions.,teammates179
82,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
83,,,,The WebUI service retrieves images from the Image Provider.,TeaStore2
84,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
85,,,,The Persistence service provides access to the data persisted in the relational database back-end.,TeaStore22
86,,,,The Web API is protected by two layers of access control check.,teammates52
87,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
88,,,,Logic is a Facade class which connects to the several Logic classes to handle the logic related to various types of data and to access data from the Storage component.,teammates88
89,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
90,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
91,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
92,,,,All GQL queries are to be contained inside the Storage component.,teammates123
93,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
94,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
95,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
96,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
97,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
98,,,,common.datatransfer contains data transfer objects.,teammates159
99,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
100,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
101,,,,The cli package bundles classes that are responsible for JabRefâs command line interface.,jabref10
102,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
103,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
104,,,,We use an event bus to publish events from the model to the other layers.,jabref12
105,,,,The diagram below shows the object structure of the UI component.,teammates25
106,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
107,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
108,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
109,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
110,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
111,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
112,,,,"Package overview contains logic.api, logic.core.",teammates84
113,,,,Cascade logic is handled by the Logic component.,teammates129
114,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
115,,,,This UI is a single HTML page generated by Angular framework.,teammates5
116,,,,Sanitizing input values received from the UI component.,teammates81
117,,,,"In particular, it is reponsible for the following.",teammates120
118,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
119,,,,Logic is a Facade class which connects to the several Logic classes to handle the logic related to various types of data and to access data from the Storage component.,teammates88
120,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
121,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
122,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
123,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
124,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
125,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
126,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
127,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
128,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
129,,,,Data is retrieved from the PersistenceProvider and product recommendations from the Recommender service.,TeaStore4
130,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
131,,,,"Seventh, the corresponding AutomatedAction will be performed, interacting with the Logic component as necessary.",teammates68
132,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
133,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
134,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
135,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
136,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
137,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
138,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
139,,,,The Logic component handles the business logic of TEAMMATES.,teammates77
140,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
141,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
142,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
143,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
144,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
145,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
146,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
147,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
148,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
149,,,,"These datatransfer classes are in common.datatransfer package, to be explained later.",teammates127
150,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
151,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
152,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
153,,,,Cascade logic is handled by the Logic component.,teammates129
154,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
155,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
156,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
157,,,,x.logic contains component test cases for testing the Logic component.,teammates176
158,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
159,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
160,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
161,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
162,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
163,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
164,,,,The diagram below shows the object structure of the UI component.,teammates25
165,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
166,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
167,,,,common.datatransfer contains data transfer objects.,teammates159
168,,,,The diagram below shows the object structure of the UI component.,teammates25
169,,,,This UI is a single HTML page generated by Angular framework.,teammates5
170,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
171,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
172,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
173,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
174,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
175,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
176,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
177,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
178,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
179,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
180,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
181,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
182,,,,Cascade logic is handled by the Logic component.,teammates129
183,,,,"Package overview contains client.util, client.remoteapi, client.scripts.",teammates195
184,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
185,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
186,,,,"These datatransfer classes are in common.datatransfer package, to be explained later.",teammates127
187,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
188,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
189,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
190,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
191,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
192,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
193,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
194,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
195,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
196,,,,This UI is a single HTML page generated by Angular framework.,teammates5
197,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
198,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
199,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
200,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
201,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
202,,,,"Package overview contains storage.api, storage.entity, storage.search.",teammates130
203,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
204,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
205,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
206,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
207,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
208,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
209,,,,The Web API is protected by two layers of access control check.,teammates52
210,,,,We use an event bus to publish events from the model to the other layers.,jabref12
211,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
212,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
213,,,,"The Storage component performs CRUD (Create, Read, Update, Delete) operations on data entities individually.",teammates118
214,,,,"Seventh, the corresponding AutomatedAction will be performed, interacting with the Logic component as necessary.",teammates68
215,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
216,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
217,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
218,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
219,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
220,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
221,,,,"These datatransfer classes are in common.datatransfer package, to be explained later.",teammates127
222,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
223,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
224,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
225,,,,"The Storage component performs CRUD (Create, Read, Update, Delete) operations on data entities individually.",teammates118
226,,,,Sanitizing input values received from the UI component.,teammates81
227,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
228,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
229,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
230,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
231,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
232,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
233,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
234,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
235,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
236,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
237,,,,"It features endpoints for general CRUD-Operations (Create, Read, Update, Delete) for the persistent entities.",TeaStore24
238,,,,It maps the relational entities to the JSON entity objects passed between services using the EclipseLink JPA ORM mapper.,TeaStore23
239,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
240,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
241,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
242,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
243,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
244,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
245,,,,storage.entity contains classes that represent persistable entities.,teammates132
246,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
247,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
248,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
249,,,,The Storage component does not perform any cascade delete/create operations.,teammates128
250,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
251,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
252,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
253,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
254,,,,It contains logic to save and retireve values from cookies.,TeaStore6
255,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
256,,,,"Package overview contains logic.api, logic.core.",teammates84
257,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
258,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
259,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
260,,,,Sanitizing input values received from the UI component.,teammates81
261,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
262,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
263,,,,"Package overview contains storage.api, storage.entity, storage.search.",teammates130
264,,,,It matches the provided product ID or UI name (the filename for images not representing a product and therefore without product ID) and the image size to a unique image identifier.,TeaStore11
265,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
266,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
267,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
268,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
269,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
270,,,,x.webapi contains system test cases for testing the user-invoked actions.,teammates179
271,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
272,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
273,,,,The diagram below shows the object structure of the UI component.,teammates25
274,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
275,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
276,,,,We use an event bus to publish events from the model to the other layers.,jabref12
277,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
278,,,,x.webapi contains system test cases for testing the user-invoked actions.,teammates179
279,,,,x.lnp contains load and performance tests (experimental).,teammates193
280,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
281,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
282,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
283,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
284,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
285,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
286,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
287,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
288,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
289,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
290,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
291,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
292,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
293,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
294,,,,"Second, WebApiServlet uses the ActionFactory to generate the matching Action object, e.g. InstructorHomePageAction.",teammates44
295,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
296,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
297,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
298,,,,The UserDBAdapter component queries the database.,MediaStore12
299,,,,Sanitizing input values received from the UI component.,teammates81
300,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
301,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
302,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
303,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
304,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
305,,,,The Client component can connect to the back end directly without using a Web browser.,teammates18
306,,,,Sanitizing input values received from the UI component.,teammates81
307,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
308,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
309,,,,"As such, it also acts as a caching layer.",TeaStore26
310,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
311,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
312,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
313,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
314,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
315,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
316,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
317,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
318,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
319,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
320,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
321,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
322,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
323,,,,We use an event bus to publish events from the model to the other layers.,jabref12
324,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
325,,,,The Image Provider delivers images to the WebUI as base64 encoded strings to embed them in the final HTML.,TeaStore10
326,,,,This UI is a single HTML page generated by Angular framework.,teammates5
327,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
328,,,,The diagram below shows the object structure of the UI component.,teammates25
329,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
330,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
331,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
332,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
333,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
334,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
335,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
336,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
337,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
338,,,,"Package overview contains storage.api, storage.entity, storage.search.",teammates130
339,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
340,,,,The diagram below shows the object structure of the UI component.,teammates25
341,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
342,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
343,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
344,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
345,,,,"Logic API is represented by the classes Logic, GateKeeper, EmailGenerator, EmailSender, TaskQueuer.",teammates87
346,,,,It contains logic to save and retireve values from cookies.,TeaStore6
347,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
348,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
349,,,,"In particular, it is responsible for the following.",teammates78
350,,,,The WebUI service retrieves images from the Image Provider.,TeaStore2
351,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
352,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
353,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
354,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
355,,,,The Database component then executes the actual query for files.,MediaStore31
356,,,,"Seventh, the corresponding AutomatedAction will be performed, interacting with the Logic component as necessary.",teammates68
357,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
358,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
359,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
360,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
361,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
362,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
363,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
364,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
365,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
366,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
367,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
368,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
369,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
370,,,,This UI is a single HTML page generated by Angular framework.,teammates5
371,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
372,,,,The Logic component handles the business logic of TEAMMATES.,teammates77
373,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
374,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
375,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
376,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
377,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
378,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
379,,,,"Package overview contains storage.api, storage.entity, storage.search.",teammates130
380,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
381,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
382,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
383,,,,"The Client component contains scripts that can connect directly to the application back-end for administrative purposes, such as migrating data to a new schema and calculating statistics.",teammates194
384,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
385,,,,It contains logic to save and retireve values from cookies.,TeaStore6
386,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
387,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
388,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
389,,,,The Logic component handles the business logic of TEAMMATES.,teammates77
390,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
391,,,,This UI is a single HTML page generated by Angular framework.,teammates5
392,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
393,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
394,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
395,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
396,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
397,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
398,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
399,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
400,,,,The UI provides a status page at link indicating the current state of the TeaStore.,TeaStore8
401,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
402,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
403,,,,Sanitizing input values received from the UI component.,teammates81
404,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
405,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
406,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
407,,,,x.storage contains component test cases for testing the Storage component.,teammates177
408,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
409,,,,The diagram below shows the object structure of the UI component.,teammates25
410,,,,This UI is a single HTML page generated by Angular framework.,teammates5
411,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
412,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
413,,,,"After the user calls the page to list all available audio files, AudioAccess creates a query that is sent to the Database component.",MediaStore25
414,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
415,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
416,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
417,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
418,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
419,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
420,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
421,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
422,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
423,,,,Sanitizing input values received from the UI component.,teammates81
424,,,,"Seventh, the corresponding AutomatedAction will be performed, interacting with the Logic component as necessary.",teammates68
425,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
426,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
427,,,,Entity already exists throws EntityAlreadyExistsException (escalated from Storage level).,teammates101
428,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
429,,,,common.datatransfer package contains lightweight data transfer object classes for transferring data among components.,teammates160
430,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
431,,,,We use an event bus to publish events from the model to the other layers.,jabref12
432,,,,The Web API is protected by two layers of access control check.,teammates52
433,,,,Sanitizing input values received from the UI component.,teammates81
434,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
435,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
436,,,,This UI is a single HTML page generated by Angular framework.,teammates5
437,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
438,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
439,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
440,,,,The Web API is protected by two layers of access control check.,teammates52
441,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
442,,,,"If the product ID or UI name is not available to the Image Provider, a standard ""not found"" image will be delivered in the correct size.",TeaStore12
443,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
444,,,,The diagram below shows the object structure of the UI component.,teammates25
445,,,,The Persistence service provides access to the data persisted in the relational database back-end.,TeaStore22
446,,,,The Image Provider delivers images to the WebUI as base64 encoded strings to embed them in the final HTML.,TeaStore10
447,,,,"If the action is allowed, it will be performed, interacting with the Logic component as necessary.",teammates47
448,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
449,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
450,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
451,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
452,,,,"The Client component contains scripts that can connect directly to the application back-end for administrative purposes, such as migrating data to a new schema and calculating statistics.",teammates194
453,,,,This UI is a single HTML page generated by Angular framework.,teammates5
454,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
455,,,,It matches the provided product ID or UI name (the filename for images not representing a product and therefore without product ID) and the image size to a unique image identifier.,TeaStore11
456,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
457,,,,The diagram below shows the object structure of the UI component.,teammates25
458,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
459,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
460,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
461,,,,storage.search contains classes for dealing with searching and indexing.,teammates133
462,,,,Entity already exists throws EntityAlreadyExistsException (escalated from Storage level).,teammates101
463,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
464,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
465,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
466,,,,common.util contains utility classes.,teammates157
467,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
468,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
469,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
470,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
471,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
472,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
473,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
474,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
475,,,,The diagram below shows the object structure of the UI component.,teammates25
476,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
477,,,,It matches the provided product ID or UI name (the filename for images not representing a product and therefore without product ID) and the image size to a unique image identifier.,TeaStore11
478,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
479,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
480,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
481,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
482,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
483,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
484,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
485,,,,"The storage layer of the application uses the persistence framework provided by GAE Datastore, a NoSQL database.",teammates9
486,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
487,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
488,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
489,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
490,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
491,,,,x.lnp contains load and performance tests (experimental).,teammates193
492,,,,The diagram below shows the object structure of the UI component.,teammates25
493,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
494,,,,The diagram below shows the object structure of the UI component.,teammates25
495,,,,"Seventh, the corresponding AutomatedAction will be performed, interacting with the Logic component as necessary.",teammates68
496,,,,Sanitizing input values received from the UI component.,teammates81
497,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
498,,,,x.logic contains component test cases for testing the Logic component.,teammates176
499,,,,"The Database component represents an actual database (e.g., MySQL).",MediaStore23
500,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
501,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
502,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
503,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
504,,,,There are additional utility packages for preferences and the cli.,jabref2
505,,,,common.datatransfer contains data transfer objects.,teammates159
506,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
507,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
508,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
509,,,,common.datatransfer contains data transfer objects.,teammates159
510,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
511,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
512,,,,This UI is a single HTML page generated by Angular framework.,teammates5
513,,,,"These datatransfer classes are in common.datatransfer package, to be explained later.",teammates127
514,,,,All GQL queries are to be contained inside the Storage component.,teammates123
515,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
516,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
517,,,,It maps the relational entities to the JSON entity objects passed between services using the EclipseLink JPA ORM mapper.,TeaStore23
518,,,,"These datatransfer classes are in common.datatransfer package, to be explained later.",teammates127
519,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
520,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
521,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
522,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
523,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
524,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
525,,,,The Recommender is used to generate individual product recommendations for each user.,TeaStore27
526,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
527,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
528,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
529,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
530,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
531,,,,x.logic contains component test cases for testing the Logic component.,teammates176
532,,,,"These datatransfer classes are in common.datatransfer package, to be explained later.",teammates127
533,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
534,,,,The Client component can connect to the back end directly without using a Web browser.,teammates18
535,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
536,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
537,,,,"If the action is allowed, it will be performed, interacting with the Logic component as necessary.",teammates47
538,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
539,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
540,,,,Logic is a Facade class which connects to the several Logic classes to handle the logic related to various types of data and to access data from the Storage component.,teammates88
541,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
542,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
543,,,,The WebUI service retrieves images from the Image Provider.,TeaStore2
544,,,,Users are authenticated by the Auth service.,TeaStore3
545,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
546,,,,"In particular, it is responsible for the following.",teammates78
547,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
548,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
549,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
550,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
551,,,,The Logic component handles the business logic of TEAMMATES.,teammates77
552,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
553,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
554,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
555,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
556,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
557,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
558,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
559,,,,This UI is a single HTML page generated by Angular framework.,teammates5
560,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
561,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
562,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
563,,,,The Image Provider delivers images to the WebUI as base64 encoded strings to embed them in the final HTML.,TeaStore10
564,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
565,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
566,,,,"Images (with few exceptions) are not provides by the WebUi, but are retrieved from the Image Provider service instead.",TeaStore7
567,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
568,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
569,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
570,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
571,,,,The diagram below shows the object structure of the UI component.,teammates25
572,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
573,,,,"Package overview contains logic.api, logic.core.",teammates84
574,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
575,,,,"Seventh, the corresponding AutomatedAction will be performed, interacting with the Logic component as necessary.",teammates68
576,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
577,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
578,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
579,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
580,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
581,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
582,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
583,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
584,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
585,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
586,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
587,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
588,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
589,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
590,,,,"The Database component represents an actual database (e.g., MySQL).",MediaStore23
591,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
592,,,,It matches the provided product ID or UI name (the filename for images not representing a product and therefore without product ID) and the image size to a unique image identifier.,TeaStore11
593,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
594,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
595,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
596,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
597,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
598,,,,"It features endpoints for general CRUD-Operations (Create, Read, Update, Delete) for the persistent entities.",TeaStore24
599,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
600,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
601,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
602,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
603,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
604,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
605,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
606,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
607,,,,"These datatransfer classes are in common.datatransfer package, to be explained later.",teammates127
608,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
609,,,,Entity already exists throws EntityAlreadyExistsException (escalated from Storage level).,teammates101
610,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
611,,,,logic.core contains the core logic of the system.,teammates86
612,,,,"The Storage component performs CRUD (Create, Read, Update, Delete) operations on data entities individually.",teammates118
613,,,,The Logic component handles the business logic of TEAMMATES.,teammates77
614,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
615,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
616,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
617,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
618,,,,"Logic API is represented by the classes Logic, GateKeeper, EmailGenerator, EmailSender, TaskQueuer.",teammates87
619,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
620,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
621,,,,x.logic contains component test cases for testing the Logic component.,teammates176
622,,,,Sanitizing input values received from the UI component.,teammates81
623,,,,We use an event bus to publish events from the model to the other layers.,jabref12
624,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
625,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
626,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
627,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
628,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
629,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
630,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
631,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
632,,,,It is trained using all existing orders.,TeaStore28
633,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
634,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
635,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
636,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
637,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
638,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
639,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
640,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
641,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
642,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
643,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
644,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
645,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
646,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
647,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
648,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
649,,,,"Package overview contains logic.api, logic.core.",teammates84
650,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
651,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
652,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
653,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
654,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
655,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
656,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
657,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
658,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
659,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
660,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
661,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
662,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
663,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
664,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
665,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
666,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
667,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
668,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
669,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
670,,,,x.logic contains component test cases for testing the Logic component.,teammates176
671,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
672,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
673,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
674,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
675,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
676,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
677,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
678,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
679,,,,Sanitizing input values received from the UI component.,teammates81
680,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
681,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
682,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
683,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
684,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
685,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
686,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
687,,,,"The Storage component performs CRUD (Create, Read, Update, Delete) operations on data entities individually.",teammates118
688,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
689,,,,The diagram below shows the object structure of the UI component.,teammates25
690,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
691,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
692,,,,"In particular, it is responsible for the following.",teammates78
693,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
694,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
695,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
696,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
697,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
698,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
699,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
700,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
701,,,,logic.core contains the core logic of the system.,teammates86
702,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
703,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
704,,,,x.lnp contains load and performance tests (experimental).,teammates193
705,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
706,,,,"The storage layer of the application uses the persistence framework provided by GAE Datastore, a NoSQL database.",teammates9
707,,,,"Package overview contains logic.api, logic.core.",teammates84
708,,,,Sanitizing input values received from the UI component.,teammates81
709,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
710,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
711,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
712,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
713,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
714,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
715,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
716,,,,common.datatransfer contains data transfer objects.,teammates159
717,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
718,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
719,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
720,,,,"In particular, it is responsible for the following.",teammates78
721,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
722,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
723,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
724,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
725,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
726,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
727,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
728,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
729,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
730,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
731,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
732,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
733,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
734,,,,"The Client component contains scripts that can connect directly to the application back-end for administrative purposes, such as migrating data to a new schema and calculating statistics.",teammates194
735,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
736,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
737,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
738,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
739,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
740,,,,common.util contains utility classes.,teammates157
741,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
742,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
743,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
744,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
745,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
746,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
747,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
748,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
749,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
750,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
751,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
752,,,,The WebUI service retrieves images from the Image Provider.,TeaStore2
753,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
754,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
755,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
756,,,,The diagram below shows the object structure of the UI component.,teammates25
757,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
758,,,,This UI is a single HTML page generated by Angular framework.,teammates5
759,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
760,,,,Sanitizing input values received from the UI component.,teammates81
761,,,,This UI is a single HTML page generated by Angular framework.,teammates5
762,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
763,,,,The Recommender is used to generate individual product recommendations for each user.,TeaStore27
764,,,,There are additional utility packages for preferences and the cli.,jabref2
765,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
766,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
767,,,,"These datatransfer classes are in common.datatransfer package, to be explained later.",teammates127
768,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
769,,,,It contains logic to save and retireve values from cookies.,TeaStore6
770,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
771,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
772,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
773,,,,We use an event bus to publish events from the model to the other layers.,jabref12
774,,,,storage.api provides the API of the component to be accessed by the logic component.,teammates131
775,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
776,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
777,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
778,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
779,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
780,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
781,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
782,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
783,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
784,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
785,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
786,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
787,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
788,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
789,,,,x.storage contains component test cases for testing the Storage component.,teammates177
790,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
791,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
792,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
793,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
794,,,,x.webapi contains system test cases for testing the user-invoked actions.,teammates179
795,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
796,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
797,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
798,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
799,,,,storage.api provides the API of the component to be accessed by the logic component.,teammates131
800,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
801,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
802,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
803,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
804,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
805,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
806,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
807,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
808,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
809,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
810,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
811,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
812,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
813,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
814,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
815,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
816,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
817,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
818,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
819,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
820,,,,x.webapi contains system test cases for testing the user-invoked actions.,teammates179
821,,,,"As such, it also acts as a caching layer.",TeaStore26
822,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
823,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
824,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
825,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
826,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
827,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
828,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
829,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
830,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
831,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
832,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
833,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
834,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
835,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
836,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
837,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
838,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
839,,,,"If the action is allowed, it will be performed, interacting with the Logic component as necessary.",teammates47
840,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
841,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
842,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
843,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
844,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
845,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
846,,,,The Web API is protected by two layers of access control check.,teammates52
847,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
848,,,,storage.api provides the API of the component to be accessed by the logic component.,teammates131
849,,,,The WebUI service retrieves images from the Image Provider.,TeaStore2
850,,,,"As such, it also acts as a caching layer.",TeaStore26
851,,,,Sanitizing input values received from the UI component.,teammates81
852,,,,The Storage component does not perform any cascade delete/create operations.,teammates128
853,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
854,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
855,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
856,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
857,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
858,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
859,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
860,,,,"Package overview contains logic.api, logic.core.",teammates84
861,,,,All GQL queries are to be contained inside the Storage component.,teammates123
862,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
863,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
864,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
865,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
866,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
867,,,,common.datatransfer package contains lightweight data transfer object classes for transferring data among components.,teammates160
868,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
869,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
870,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
871,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
872,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
873,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
874,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
875,,,,The Storage component does not perform any cascade delete/create operations.,teammates128
876,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
877,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
878,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
879,,,,We use an event bus to publish events from the model to the other layers.,jabref12
880,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
881,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
882,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
883,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
884,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
885,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
886,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
887,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
888,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
889,,,,"The storage layer of the application uses the persistence framework provided by GAE Datastore, a NoSQL database.",teammates9
890,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
891,,,,"One of the main components of Media Store is a server-side web front end, namely the Facade component, which delivers websites to the users and provides session management.",MediaStore1
892,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
893,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
894,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
895,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
896,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
897,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
898,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
899,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
900,,,,Cascade logic is handled by the Logic component.,teammates129
901,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
902,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
903,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
904,,,,The Database component then executes the actual query for files.,MediaStore31
905,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
906,,,,"The storage layer of the application uses the persistence framework provided by GAE Datastore, a NoSQL database.",teammates9
907,,,,The preferences represents all information customizable by a user for her personal needs.,jabref11
908,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
909,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
910,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
911,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
912,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
913,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
914,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
915,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
916,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
917,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
918,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
919,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
920,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
921,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
922,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
923,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
924,,,,Sanitizing input values received from the UI component.,teammates81
925,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
926,,,,x.logic contains component test cases for testing the Logic component.,teammates176
927,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
928,,,,x.webapi contains system test cases for testing the user-invoked actions.,teammates179
929,,,,"Images (with few exceptions) are not provides by the WebUi, but are retrieved from the Image Provider service instead.",TeaStore7
930,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
931,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
932,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
933,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
934,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
935,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
936,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
937,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
938,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
939,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
940,,,,storage.api provides the API of the component to be accessed by the logic component.,teammates131
941,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
942,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
943,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
944,,,,storage.api provides the API of the component to be accessed by the logic component.,teammates131
945,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
946,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
947,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
948,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
949,,,,storage.search contains classes for dealing with searching and indexing.,teammates133
950,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
951,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
952,,,,"In particular, it is reponsible for the following.",teammates120
953,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
954,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
955,,,,The UpdateOptions will specify what is used to identify the entity to update and what will be updated.,teammates108
956,,,,"However, a download can cause re-encoding of the audio file.",MediaStore37
957,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
958,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
959,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
960,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
961,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
962,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
963,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
964,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
965,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
966,,,,Sanitizing input values received from the UI component.,teammates81
967,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
968,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
969,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
970,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
971,,,,common.datatransfer contains data transfer objects.,teammates159
972,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
973,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
974,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
975,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
976,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
977,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
978,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
979,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
980,,,,"In particular, it is responsible for the following.",teammates78
981,,,,This UI is a single HTML page generated by Angular framework.,teammates5
982,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
983,,,,This UI is a single HTML page generated by Angular framework.,teammates5
984,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
985,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
986,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
987,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
988,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
989,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
990,,,,The Web API is protected by two layers of access control check.,teammates52
991,,,,Sanitizing input values received from the UI component.,teammates81
992,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
993,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
994,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
995,,,,This UI is a single HTML page generated by Angular framework.,teammates5
996,,,,"In particular, it is reponsible for the following.",teammates120
997,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
998,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
999,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1000,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1001,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1002,,,,"The Client component contains scripts that can connect directly to the application back-end for administrative purposes, such as migrating data to a new schema and calculating statistics.",teammates194
1003,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1004,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
1005,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
1006,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1007,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
1008,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
1009,,,,The diagram below shows the object structure of the UI component.,teammates25
1010,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1011,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1012,,,,Data is retrieved from the PersistenceProvider and product recommendations from the Recommender service.,TeaStore4
1013,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1014,,,,"Package overview contains logic.api, logic.core.",teammates84
1015,,,,"Logic API is represented by the classes Logic, GateKeeper, EmailGenerator, EmailSender, TaskQueuer.",teammates87
1016,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1017,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1018,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1019,,,,x.webapi contains system test cases for testing the user-invoked actions.,teammates179
1020,,,,x.webapi contains system test cases for testing the user-invoked actions.,teammates179
1021,,,,"Logic API is represented by the classes Logic, GateKeeper, EmailGenerator, EmailSender, TaskQueuer.",teammates87
1022,,,,The WebUI provides the TeaStore front-end using Servlets in combination with JSP files.,TeaStore5
1023,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
1024,,,,common.datatransfer contains data transfer objects.,teammates159
1025,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1026,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1027,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1028,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
1029,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
1030,,,,Sanitizing input values received from the UI component.,teammates81
1031,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1032,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1033,,,,Sanitizing input values received from the UI component.,teammates81
1034,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1035,,,,"Images (with few exceptions) are not provides by the WebUi, but are retrieved from the Image Provider service instead.",TeaStore7
1036,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
1037,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1038,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1039,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1040,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1041,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1042,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1043,,,,"Images (with few exceptions) are not provides by the WebUi, but are retrieved from the Image Provider service instead.",TeaStore7
1044,,,,"Package overview contains storage.api, storage.entity, storage.search.",teammates130
1045,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1046,,,,The diagram below shows the object structure of the UI component.,teammates25
1047,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
1048,,,,common.datatransfer package contains lightweight data transfer object classes for transferring data among components.,teammates160
1049,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1050,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1051,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
1052,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1053,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1054,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1055,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
1056,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
1057,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1058,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1059,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
1060,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1061,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1062,,,,Invalid parameters throws InvalidParametersException.,teammates110
1063,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1064,,,,The Client component can connect to the back end directly without using a Web browser.,teammates18
1065,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1066,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1067,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1068,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
1069,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1070,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1071,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1072,,,,The Client component can connect to the back end directly without using a Web browser.,teammates18
1073,,,,"If the product ID or UI name is not available to the Image Provider, a standard ""not found"" image will be delivered in the correct size.",TeaStore12
1074,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1075,,,,"The Client component contains scripts that can connect directly to the application back-end for administrative purposes, such as migrating data to a new schema and calculating statistics.",teammates194
1076,,,,"The Client component contains scripts that can connect directly to the application back-end for administrative purposes, such as migrating data to a new schema and calculating statistics.",teammates194
1077,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1078,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1079,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1080,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
1081,,,,storage.entity contains classes that represent persistable entities.,teammates132
1082,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1083,,,,The WebUI service retrieves images from the Image Provider.,TeaStore2
1084,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1085,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1086,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
1087,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1088,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1089,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
1090,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1091,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1092,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1093,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1094,,,,The preferences represents all information customizable by a user for her personal needs.,jabref11
1095,,,,We use an event bus to publish events from the model to the other layers.,jabref12
1096,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1097,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1098,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1099,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1100,,,,Sanitizing input values received from the UI component.,teammates81
1101,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1102,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1103,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1104,,,,Cascade logic is handled by the Logic component.,teammates129
1105,,,,common.datatransfer contains data transfer objects.,teammates159
1106,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1107,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1108,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
1109,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
1110,,,,"By limiting it to a single registry instance, it enables easy configuration of multiple parallel TeaStores with minimal configuration overhead.",TeaStore43
1111,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1112,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1113,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1114,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1115,,,,Hiding the complexities of datastore from the Logic component.,teammates122
1116,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1117,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1118,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1119,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1120,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1121,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1122,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
1123,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1124,,,,The Web API is protected by two layers of access control check.,teammates52
1125,,,,"Images (with few exceptions) are not provides by the WebUi, but are retrieved from the Image Provider service instead.",TeaStore7
1126,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1127,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1128,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1129,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1130,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1131,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1132,,,,Sanitizing input values received from the UI component.,teammates81
1133,,,,The diagram below shows the object structure of the UI component.,teammates25
1134,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1135,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
1136,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1137,,,,It is trained using all existing orders.,TeaStore28
1138,,,,common.datatransfer package contains lightweight data transfer object classes for transferring data among components.,teammates160
1139,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1140,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
1141,,,,Data is retrieved from the PersistenceProvider and product recommendations from the Recommender service.,TeaStore4
1142,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1143,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
1144,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1145,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1146,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1147,,,,The diagram below shows the object structure of the UI component.,teammates25
1148,,,,Entity already exists throws EntityAlreadyExistsException (escalated from Storage level).,teammates101
1149,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1150,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1151,,,,The UserDBAdapter component creates a query based on the user's request.,MediaStore30
1152,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1153,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1154,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1155,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1156,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1157,,,,"If the product ID or UI name is not available to the Image Provider, a standard ""not found"" image will be delivered in the correct size.",TeaStore12
1158,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1159,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
1160,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1161,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1162,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1163,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1164,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
1165,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1166,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1167,,,,"If the action is allowed, it will be performed, interacting with the Logic component as necessary.",teammates47
1168,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1169,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1170,,,,The diagram below shows the object structure of the UI component.,teammates25
1171,,,,We use an event bus to publish events from the model to the other layers.,jabref12
1172,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1173,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1174,,,,It matches the provided product ID or UI name (the filename for images not representing a product and therefore without product ID) and the image size to a unique image identifier.,TeaStore11
1175,,,,It matches the provided product ID or UI name (the filename for images not representing a product and therefore without product ID) and the image size to a unique image identifier.,TeaStore11
1176,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1177,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1178,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1179,,,,Sanitizing input values received from the UI component.,teammates81
1180,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1181,,,,There are additional utility packages for preferences and the cli.,jabref2
1182,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1183,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1184,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1185,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1186,,,,The Image Provider delivers images to the WebUI as base64 encoded strings to embed them in the final HTML.,TeaStore10
1187,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1188,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1189,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1190,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1191,,,,Cascade logic is handled by the Logic component.,teammates129
1192,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1193,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1194,,,,Cascade logic is handled by the Logic component.,teammates129
1195,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1196,,,,The diagram below shows the object structure of the UI component.,teammates25
1197,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1198,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1199,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1200,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
1201,,,,The diagram below shows the object structure of the UI component.,teammates25
1202,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1203,,,,x.webapi contains system test cases for testing the user-invoked actions.,teammates179
1204,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1205,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1206,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1207,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1208,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1209,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1210,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1211,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
1212,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1213,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
1214,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1215,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1216,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
1217,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1218,,,,"If the action is allowed, it will be performed, interacting with the Logic component as necessary.",teammates47
1219,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1220,,,,"Logic API is represented by the classes Logic, GateKeeper, EmailGenerator, EmailSender, TaskQueuer.",teammates87
1221,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1222,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
1223,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1224,,,,"If the product ID or UI name is not available to the Image Provider, a standard ""not found"" image will be delivered in the correct size.",TeaStore12
1225,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1226,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1227,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1228,,,,Sanitizing input values received from the UI component.,teammates81
1229,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1230,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1231,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1232,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1233,,,,The Logic component handles the business logic of TEAMMATES.,teammates77
1234,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
1235,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1236,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1237,,,,The WebUI service retrieves images from the Image Provider.,TeaStore2
1238,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1239,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1240,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
1241,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1242,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
1243,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1244,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1245,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
1246,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1247,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1248,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1249,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
1250,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1251,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1252,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
1253,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1254,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
1255,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1256,,,,The persistence provider uses a second level entity cache provided by the JPA implementation.,TeaStore25
1257,,,,"The Client component contains scripts that can connect directly to the application back-end for administrative purposes, such as migrating data to a new schema and calculating statistics.",teammates194
1258,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
1259,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1260,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1261,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1262,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
1263,,,,x.webapi contains system test cases for testing the user-invoked actions.,teammates179
1264,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1265,,,,x.storage contains component test cases for testing the Storage component.,teammates177
1266,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1267,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1268,,,,storage.api provides the API of the component to be accessed by the logic component.,teammates131
1269,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1270,,,,The TeaStore consists of 5 replicatable services and a single Registry instance.,TeaStore1
1271,,,,Classes in the storage.entity package are not visible outside this component to hide information specific to data persistence.,teammates125
1272,,,,"If the product ID or UI name is not available to the Image Provider, a standard ""not found"" image will be delivered in the correct size.",TeaStore12
1273,,,,Sanitizing input values received from the UI component.,teammates81
1274,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1275,,,,We use an event bus to publish events from the model to the other layers.,jabref12
1276,,,,Logic is a Facade class which connects to the several Logic classes to handle the logic related to various types of data and to access data from the Storage component.,teammates88
1277,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1278,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
1279,,,,This component automates the testing of TEAMMATES.,teammates168
1280,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1281,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1282,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1283,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1284,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1285,,,,This component automates the testing of TEAMMATES.,teammates168
1286,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1287,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1288,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
1289,,,,"In particular, it is responsible for the following.",teammates78
1290,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1291,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1292,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1293,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1294,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
1295,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1296,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1297,,,,"Logic API is represented by the classes Logic, GateKeeper, EmailGenerator, EmailSender, TaskQueuer.",teammates87
1298,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1299,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1300,,,,The Client component can connect to the back end directly without using a Web browser.,teammates18
1301,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1302,,,,x.storage contains component test cases for testing the Storage component.,teammates177
1303,,,,The Web API is protected by two layers of access control check.,teammates52
1304,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1305,,,,common.util contains utility classes.,teammates157
1306,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1307,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1308,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1309,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1310,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1311,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1312,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1313,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1314,,,,"In particular, it is responsible for the following.",teammates78
1315,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
1316,,,,storage.api provides the API of the component to be accessed by the logic component.,teammates131
1317,,,,Cascade logic is handled by the Logic component.,teammates129
1318,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
1319,,,,"As such, it also acts as a caching layer.",TeaStore26
1320,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1321,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1322,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1323,,,,"Logic API is represented by the classes Logic, GateKeeper, EmailGenerator, EmailSender, TaskQueuer.",teammates87
1324,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1325,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1326,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1327,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1328,,,,Hiding the complexities of datastore from the Logic component.,teammates122
1329,,,,"Logic API is represented by the classes Logic, GateKeeper, EmailGenerator, EmailSender, TaskQueuer.",teammates87
1330,,,,x.storage contains component test cases for testing the Storage component.,teammates177
1331,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
1332,,,,The diagram below shows the object structure of the UI component.,teammates25
1333,,,,We use an event bus to publish events from the model to the other layers.,jabref12
1334,,,,"The Client component contains scripts that can connect directly to the application back-end for administrative purposes, such as migrating data to a new schema and calculating statistics.",teammates194
1335,,,,"Images (with few exceptions) are not provides by the WebUi, but are retrieved from the Image Provider service instead.",TeaStore7
1336,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
1337,,,,The Client component can connect to the back end directly without using a Web browser.,teammates18
1338,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1339,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1340,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
1341,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1342,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1343,,,,The diagram below shows the object structure of the UI component.,teammates25
1344,,,,"The Storage component performs CRUD (Create, Read, Update, Delete) operations on data entities individually.",teammates118
1345,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1346,,,,logic.core contains the core logic of the system.,teammates86
1347,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
1348,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
1349,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1350,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1351,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1352,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1353,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1354,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1355,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1356,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1357,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1358,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1359,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1360,,,,Sanitizing input values received from the UI component.,teammates81
1361,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1362,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1363,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1364,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1365,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1366,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1367,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1368,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1369,,,,"These datatransfer classes are in common.datatransfer package, to be explained later.",teammates127
1370,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1371,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1372,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1373,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1374,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1375,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1376,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1377,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1378,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1379,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1380,,,,The diagram below shows the object structure of the UI component.,teammates25
1381,,,,Sanitizing input values received from the UI component.,teammates81
1382,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1383,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1384,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
1385,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1386,,,,We use an event bus to publish events from the model to the other layers.,jabref12
1387,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1388,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1389,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
1390,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1391,,,,Sanitizing input values received from the UI component.,teammates81
1392,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1393,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1394,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1395,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1396,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
1397,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1398,,,,It matches the provided product ID or UI name (the filename for images not representing a product and therefore without product ID) and the image size to a unique image identifier.,TeaStore11
1399,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1400,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
1401,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1402,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1403,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1404,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1405,,,,The WebUI service retrieves images from the Image Provider.,TeaStore2
1406,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1407,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1408,,,,The WebUI provides the TeaStore front-end using Servlets in combination with JSP files.,TeaStore5
1409,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1410,,,,"The Client component contains scripts that can connect directly to the application back-end for administrative purposes, such as migrating data to a new schema and calculating statistics.",teammates194
1411,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1412,,,,"Logic API is represented by the classes Logic, GateKeeper, EmailGenerator, EmailSender, TaskQueuer.",teammates87
1413,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1414,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1415,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1416,,,,x.logic contains component test cases for testing the Logic component.,teammates176
1417,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1418,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1419,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1420,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1421,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
1422,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1423,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
1424,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1425,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1426,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1427,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1428,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1429,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1430,,,,"If the action is allowed, it will be performed, interacting with the Logic component as necessary.",teammates47
1431,,,,We use an event bus to publish events from the model to the other layers.,jabref12
1432,,,,Sanitizing input values received from the UI component.,teammates81
1433,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1434,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
1435,,,,The diagram below shows the object structure of the UI component.,teammates25
1436,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1437,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
1438,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1439,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1440,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1441,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1442,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1443,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
1444,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1445,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1446,,,,We use an event bus to publish events from the model to the other layers.,jabref12
1447,,,,x.webapi contains system test cases for testing the user-invoked actions.,teammates179
1448,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1449,,,,Entity already exists throws EntityAlreadyExistsException (escalated from Storage level).,teammates101
1450,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1451,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1452,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1453,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1454,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
1455,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
1456,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
1457,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
1458,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1459,,,,The diagram below shows the object structure of the UI component.,teammates25
1460,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1461,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1462,,,,We use an event bus to publish events from the model to the other layers.,jabref12
1463,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1464,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1465,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
1466,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1467,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
1468,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
1469,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1470,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
1471,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1472,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1473,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1474,,,,We use an event bus to publish events from the model to the other layers.,jabref12
1475,,,,Logic is a Facade class which connects to the several Logic classes to handle the logic related to various types of data and to access data from the Storage component.,teammates88
1476,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1477,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1478,,,,The Storage component does not perform any cascade delete/create operations.,teammates128
1479,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1480,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1481,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1482,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1483,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
1484,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1485,,,,Entity already exists throws EntityAlreadyExistsException (escalated from Storage level).,teammates101
1486,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1487,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1488,,,,Sanitizing input values received from the UI component.,teammates81
1489,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1490,,,,The diagram below shows the object structure of the UI component.,teammates25
1491,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1492,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
1493,,,,Sanitizing input values received from the UI component.,teammates81
1494,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1495,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1496,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1497,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1498,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1499,,,,Every running instance of the TeaStore uses one single registry.,TeaStore41
1500,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1501,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1502,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1503,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1504,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
1505,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1506,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1507,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
1508,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
1509,,,,The Auth service handles user and session authentication.,TeaStore18
1510,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
1511,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1512,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
1513,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1514,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1515,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
1516,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1517,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1518,,,,The diagram below shows the object structure of the UI component.,teammates25
1519,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1520,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1521,,,,"These datatransfer classes are in common.datatransfer package, to be explained later.",teammates127
1522,,,,Sanitizing input values received from the UI component.,teammates81
1523,,,,x.storage contains component test cases for testing the Storage component.,teammates177
1524,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1525,,,,We use an event bus to publish events from the model to the other layers.,jabref12
1526,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1527,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1528,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1529,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1530,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
1531,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1532,,,,The Storage component does not perform any cascade delete/create operations.,teammates128
1533,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1534,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1535,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1536,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
1537,,,,"Seventh, the corresponding AutomatedAction will be performed, interacting with the Logic component as necessary.",teammates68
1538,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1539,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1540,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1541,,,,storage.api provides the API of the component to be accessed by the logic component.,teammates131
1542,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
1543,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1544,,,,Data is retrieved from the PersistenceProvider and product recommendations from the Recommender service.,TeaStore4
1545,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1546,,,,We use an event bus to publish events from the model to the other layers.,jabref12
1547,,,,"Images (with few exceptions) are not provides by the WebUi, but are retrieved from the Image Provider service instead.",TeaStore7
1548,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1549,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1550,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
1551,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1552,,,,The WebUI service retrieves images from the Image Provider.,TeaStore2
1553,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1554,,,,The diagram below shows the object structure of the UI component.,teammates25
1555,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1556,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1557,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1558,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1559,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1560,,,,The Web API is protected by two layers of access control check.,teammates52
1561,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
1562,,,,The Web API is protected by two layers of access control check.,teammates52
1563,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1564,,,,"When a user logs into the system, Media Store does not store the password in plain text, but rather the UserManagement component implements further functions to hash and salt the passwords.",MediaStore13
1565,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1566,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1567,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1568,,,,Sanitizing input values received from the UI component.,teammates81
1569,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1570,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1571,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1572,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1573,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1574,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1575,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1576,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1577,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1578,,,,It matches the provided product ID or UI name (the filename for images not representing a product and therefore without product ID) and the image size to a unique image identifier.,TeaStore11
1579,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
1580,,,,"Seventh, the corresponding AutomatedAction will be performed, interacting with the Logic component as necessary.",teammates68
1581,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1582,,,,"Package overview contains client.util, client.remoteapi, client.scripts.",teammates195
1583,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1584,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1585,,,,It matches the provided product ID or UI name (the filename for images not representing a product and therefore without product ID) and the image size to a unique image identifier.,TeaStore11
1586,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1587,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1588,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1589,,,,Hiding the complexities of datastore from the Logic component.,teammates122
1590,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
1591,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
1592,,,,x.lnp contains load and performance tests (experimental).,teammates193
1593,,,,"Package overview contains logic.api, logic.core.",teammates84
1594,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1595,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1596,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1597,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
1598,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1599,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1600,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
1601,,,,The diagram below shows the object structure of the UI component.,teammates25
1602,,,,"In particular, it is reponsible for the following.",teammates120
1603,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1604,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1605,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1606,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1607,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1608,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1609,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
1610,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
1611,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1612,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1613,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1614,,,,x.webapi contains system test cases for testing the user-invoked actions.,teammates179
1615,,,,The Web API is protected by two layers of access control check.,teammates52
1616,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
1617,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1618,,,,common.datatransfer contains data transfer objects.,teammates159
1619,,,,The diagram below shows the object structure of the UI component.,teammates25
1620,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1621,,,,"Images (with few exceptions) are not provides by the WebUi, but are retrieved from the Image Provider service instead.",TeaStore7
1622,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
1623,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1624,,,,All GQL queries are to be contained inside the Storage component.,teammates123
1625,,,,The Image Provider delivers images to the WebUI as base64 encoded strings to embed them in the final HTML.,TeaStore10
1626,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1627,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1628,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
1629,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1630,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1631,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1632,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1633,,,,"These datatransfer classes are in common.datatransfer package, to be explained later.",teammates127
1634,,,,Entity already exists throws EntityAlreadyExistsException (escalated from Storage level).,teammates101
1635,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1636,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
1637,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1638,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1639,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1640,,,,"In particular, it is responsible for the following.",teammates78
1641,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1642,,,,It maps the relational entities to the JSON entity objects passed between services using the EclipseLink JPA ORM mapper.,TeaStore23
1643,,,,Sanitizing input values received from the UI component.,teammates81
1644,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1645,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1646,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1647,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
1648,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1649,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1650,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
1651,,,,We use an event bus to publish events from the model to the other layers.,jabref12
1652,,,,Cascade logic is handled by the Logic component.,teammates129
1653,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1654,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1655,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1656,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1657,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1658,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
1659,,,,"If the product ID or UI name is not available to the Image Provider, a standard ""not found"" image will be delivered in the correct size.",TeaStore12
1660,,,,logic.core contains the core logic of the system.,teammates86
1661,,,,logic.core contains the core logic of the system.,teammates86
1662,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1663,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1664,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
1665,,,,x.storage contains component test cases for testing the Storage component.,teammates177
1666,,,,Hiding the complexities of datastore from the Logic component.,teammates122
1667,,,,The diagram below shows the object structure of the UI component.,teammates25
1668,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1669,,,,The Logic component handles the business logic of TEAMMATES.,teammates77
1670,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1671,,,,The diagram below shows the object structure of the UI component.,teammates25
1672,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
1673,,,,All GQL queries are to be contained inside the Storage component.,teammates123
1674,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1675,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
1676,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1677,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1678,,,,Sanitizing input values received from the UI component.,teammates81
1679,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
1680,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
1681,,,,"When a user requests files to download, the MediaAccess component fetches the associated meta-data from the Database.",MediaStore34
1682,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1683,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1684,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1685,,,,Logic is a Facade class which connects to the several Logic classes to handle the logic related to various types of data and to access data from the Storage component.,teammates88
1686,,,,It matches the provided product ID or UI name (the filename for images not representing a product and therefore without product ID) and the image size to a unique image identifier.,TeaStore11
1687,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
1688,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
1689,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1690,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1691,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1692,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1693,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1694,,,,Entity already exists throws EntityAlreadyExistsException (escalated from Storage level).,teammates101
1695,,,,The WebUI service retrieves images from the Image Provider.,TeaStore2
1696,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
1697,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1698,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1699,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1700,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1701,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1702,,,,We use an event bus to publish events from the model to the other layers.,jabref12
1703,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1704,,,,Sanitizing input values received from the UI component.,teammates81
1705,,,,common.datatransfer contains data transfer objects.,teammates159
1706,,,,The Image Provider delivers images to the WebUI as base64 encoded strings to embed them in the final HTML.,TeaStore10
1707,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1708,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
1709,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1710,,,,common.datatransfer package contains lightweight data transfer object classes for transferring data among components.,teammates160
1711,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1712,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1713,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1714,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
1715,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1716,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1717,,,,There are additional utility packages for preferences and the cli.,jabref2
1718,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1719,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1720,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1721,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1722,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1723,,,,Sanitizing input values received from the UI component.,teammates81
1724,,,,"If the action is allowed, it will be performed, interacting with the Logic component as necessary.",teammates47
1725,,,,It maps the relational entities to the JSON entity objects passed between services using the EclipseLink JPA ORM mapper.,TeaStore23
1726,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1727,,,,common.util contains utility classes.,teammates157
1728,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1729,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1730,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1731,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1732,,,,"It features endpoints for general CRUD-Operations (Create, Read, Update, Delete) for the persistent entities.",TeaStore24
1733,,,,"Seventh, the corresponding AutomatedAction will be performed, interacting with the Logic component as necessary.",teammates68
1734,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1735,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1736,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1737,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1738,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1739,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1740,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1741,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1742,,,,"Package overview contains logic.api, logic.core.",teammates84
1743,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
1744,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1745,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
1746,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
1747,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1748,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
1749,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1750,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1751,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
1752,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1753,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1754,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1755,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
1756,,,,common.datatransfer contains data transfer objects.,teammates159
1757,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
1758,,,,We use an event bus to publish events from the model to the other layers.,jabref12
1759,,,,The diagram below shows the object structure of the UI component.,teammates25
1760,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
1761,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1762,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1763,,,,"The storage layer of the application uses the persistence framework provided by GAE Datastore, a NoSQL database.",teammates9
1764,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1765,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1766,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1767,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1768,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1769,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1770,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1771,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
1772,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1773,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1774,,,,"These datatransfer classes are in common.datatransfer package, to be explained later.",teammates127
1775,,,,"If the action is allowed, it will be performed, interacting with the Logic component as necessary.",teammates47
1776,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1777,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1778,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1779,,,,It maps the relational entities to the JSON entity objects passed between services using the EclipseLink JPA ORM mapper.,TeaStore23
1780,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1781,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1782,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
1783,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1784,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1785,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1786,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
1787,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1788,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1789,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
1790,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1791,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1792,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
1793,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1794,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1795,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1796,,,,"Seventh, the corresponding AutomatedAction will be performed, interacting with the Logic component as necessary.",teammates68
1797,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1798,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1799,,,,"Seventh, the corresponding AutomatedAction will be performed, interacting with the Logic component as necessary.",teammates68
1800,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
1801,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1802,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1803,,,,storage.api provides the API of the component to be accessed by the logic component.,teammates131
1804,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
1805,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1806,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
1807,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1808,,,,Sanitizing input values received from the UI component.,teammates81
1809,,,,Hiding the complexities of datastore from the Logic component.,teammates122
1810,,,,Users are authenticated by the Auth service.,TeaStore3
1811,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1812,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1813,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1814,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1815,,,,The diagram below shows the object structure of the UI component.,teammates25
1816,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
1817,,,,The diagram below shows the object structure of the UI component.,teammates25
1818,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1819,,,,The diagram below shows the object structure of the UI component.,teammates25
1820,,,,It matches the provided product ID or UI name (the filename for images not representing a product and therefore without product ID) and the image size to a unique image identifier.,TeaStore11
1821,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1822,,,,Sanitizing input values received from the UI component.,teammates81
1823,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1824,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1825,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1826,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1827,,,,"Logic API is represented by the classes Logic, GateKeeper, EmailGenerator, EmailSender, TaskQueuer.",teammates87
1828,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
1829,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1830,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1831,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1832,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1833,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
1834,,,,Sanitizing input values received from the UI component.,teammates81
1835,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1836,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1837,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
1838,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1839,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1840,,,,We use an event bus to publish events from the model to the other layers.,jabref12
1841,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1842,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1843,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
1844,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
1845,,,,"The Storage component performs CRUD (Create, Read, Update, Delete) operations on data entities individually.",teammates118
1846,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
1847,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1848,,,,Cascade logic is handled by the Logic component.,teammates129
1849,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1850,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1851,,,,common.datatransfer package contains lightweight data transfer object classes for transferring data among components.,teammates160
1852,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
1853,,,,"Images (with few exceptions) are not provides by the WebUi, but are retrieved from the Image Provider service instead.",TeaStore7
1854,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1855,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1856,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1857,,,,"If the action is allowed, it will be performed, interacting with the Logic component as necessary.",teammates47
1858,,,,The diagram below shows the object structure of the UI component.,teammates25
1859,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1860,,,,"The Client component contains scripts that can connect directly to the application back-end for administrative purposes, such as migrating data to a new schema and calculating statistics.",teammates194
1861,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1862,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1863,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1864,,,,"Second, WebPageServlet returns the built single web page (index.html).",teammates40
1865,,,,We use an event bus to publish events from the model to the other layers.,jabref12
1866,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1867,,,,"In particular, it is reponsible for the following.",teammates120
1868,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1869,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
1870,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1871,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1872,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1873,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1874,,,,"If the action is allowed, it will be performed, interacting with the Logic component as necessary.",teammates47
1875,,,,The UI provides a status page at link indicating the current state of the TeaStore.,TeaStore8
1876,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1877,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
1878,,,,There are additional utility packages for preferences and the cli.,jabref2
1879,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1880,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1881,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1882,,,,The diagram below shows the object structure of the UI component.,teammates25
1883,,,,"If the product ID or UI name is not available to the Image Provider, a standard ""not found"" image will be delivered in the correct size.",TeaStore12
1884,,,,It maps the relational entities to the JSON entity objects passed between services using the EclipseLink JPA ORM mapper.,TeaStore23
1885,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1886,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1887,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1888,,,,Sanitizing input values received from the UI component.,teammates81
1889,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1890,,,,The Web API is protected by two layers of access control check.,teammates52
1891,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1892,,,,Sanitizing input values received from the UI component.,teammates81
1893,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
1894,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1895,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1896,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
1897,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1898,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
1899,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
1900,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1901,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1902,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1903,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1904,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1905,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1906,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1907,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
1908,,,,Entity already exists throws EntityAlreadyExistsException (escalated from Storage level).,teammates101
1909,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1910,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1911,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1912,,,,It is trained using all existing orders.,TeaStore28
1913,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1914,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1915,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
1916,,,,Sanitizing input values received from the UI component.,teammates81
1917,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1918,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
1919,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1920,,,,All GQL queries are to be contained inside the Storage component.,teammates123
1921,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1922,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1923,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1924,,,,storage.entity contains classes that represent persistable entities.,teammates132
1925,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1926,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1927,,,,common.datatransfer contains data transfer objects.,teammates159
1928,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1929,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
1930,,,,Sanitizing input values received from the UI component.,teammates81
1931,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1932,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1933,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1934,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1935,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
1936,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1937,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1938,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1939,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1940,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1941,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1942,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
1943,,,,All GQL queries are to be contained inside the Storage component.,teammates123
1944,,,,"The storage layer of the application uses the persistence framework provided by GAE Datastore, a NoSQL database.",teammates9
1945,,,,"The storage layer of the application uses the persistence framework provided by GAE Datastore, a NoSQL database.",teammates9
1946,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1947,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
1948,,,,"If the product ID or UI name is not available to the Image Provider, a standard ""not found"" image will be delivered in the correct size.",TeaStore12
1949,,,,"Package overview contains logic.api, logic.core.",teammates84
1950,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
1951,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1952,,,,common.datatransfer contains data transfer objects.,teammates159
1953,,,,Logic is a Facade class which connects to the several Logic classes to handle the logic related to various types of data and to access data from the Storage component.,teammates88
1954,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1955,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1956,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1957,,,,Logic is a Facade class which connects to the several Logic classes to handle the logic related to various types of data and to access data from the Storage component.,teammates88
1958,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1959,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1960,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1961,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
1962,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1963,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1964,,,,The Web API is protected by two layers of access control check.,teammates52
1965,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1966,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1967,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1968,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
1969,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
1970,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
1971,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
1972,,,,Cascade logic is handled by the Logic component.,teammates129
1973,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1974,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1975,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
1976,,,,This UI is a single HTML page generated by Angular framework.,teammates5
1977,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
1978,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1979,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
1980,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1981,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1982,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
1983,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1984,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1985,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1986,,,,The Storage component does not perform any cascade delete/create operations.,teammates128
1987,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1988,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1989,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
1990,,,,The diagram below shows the object structure of the UI component.,teammates25
1991,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
1992,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
1993,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
1994,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
1995,,,,Sanitizing input values received from the UI component.,teammates81
1996,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1997,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
1998,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
1999,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2000,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2001,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2002,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2003,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2004,,,,"Seventh, the corresponding AutomatedAction will be performed, interacting with the Logic component as necessary.",teammates68
2005,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
2006,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
2007,,,,We use an event bus to publish events from the model to the other layers.,jabref12
2008,,,,Entity already exists throws EntityAlreadyExistsException (escalated from Storage level).,teammates101
2009,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2010,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2011,,,,We use an event bus to publish events from the model to the other layers.,jabref12
2012,,,,"In particular, it is reponsible for the following.",teammates120
2013,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
2014,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
2015,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
2016,,,,We use an event bus to publish events from the model to the other layers.,jabref12
2017,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
2018,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
2019,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2020,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2021,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2022,,,,Data is retrieved from the PersistenceProvider and product recommendations from the Recommender service.,TeaStore4
2023,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2024,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2025,,,,All GQL queries are to be contained inside the Storage component.,teammates123
2026,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
2027,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
2028,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2029,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2030,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
2031,,,,x.webapi contains system test cases for testing the user-invoked actions.,teammates179
2032,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2033,,,,Sanitizing input values received from the UI component.,teammates81
2034,,,,common.datatransfer package contains lightweight data transfer object classes for transferring data among components.,teammates160
2035,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
2036,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
2037,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2038,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2039,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
2040,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
2041,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2042,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2043,,,,"Package overview contains storage.api, storage.entity, storage.search.",teammates130
2044,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2045,,,,storage.api provides the API of the component to be accessed by the logic component.,teammates131
2046,,,,The diagram below shows the object structure of the UI component.,teammates25
2047,,,,"The Client component contains scripts that can connect directly to the application back-end for administrative purposes, such as migrating data to a new schema and calculating statistics.",teammates194
2048,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2049,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2050,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2051,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2052,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
2053,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2054,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2055,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2056,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2057,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2058,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2059,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2060,,,,"The storage layer of the application uses the persistence framework provided by GAE Datastore, a NoSQL database.",teammates9
2061,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2062,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2063,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2064,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
2065,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2066,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2067,,,,common.datatransfer package contains lightweight data transfer object classes for transferring data among components.,teammates160
2068,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2069,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2070,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2071,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2072,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2073,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2074,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2075,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2076,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2077,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2078,,,,x.logic contains component test cases for testing the Logic component.,teammates176
2079,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2080,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
2081,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2082,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2083,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2084,,,,We use an event bus to publish events from the model to the other layers.,jabref12
2085,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2086,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2087,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
2088,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
2089,,,,The Client component can connect to the back end directly without using a Web browser.,teammates18
2090,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2091,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2092,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2093,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2094,,,,The diagram below shows the object structure of the UI component.,teammates25
2095,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2096,,,,All GQL queries are to be contained inside the Storage component.,teammates123
2097,,,,It is trained using all existing orders.,TeaStore28
2098,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
2099,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2100,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2101,,,,Sanitizing input values received from the UI component.,teammates81
2102,,,,"Package overview contains logic.api, logic.core.",teammates84
2103,,,,The Logic component handles the business logic of TEAMMATES.,teammates77
2104,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2105,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
2106,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
2107,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
2108,,,,x.webapi contains system test cases for testing the user-invoked actions.,teammates179
2109,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2110,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2111,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
2112,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2113,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2114,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2115,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
2116,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2117,,,,Sanitizing input values received from the UI component.,teammates81
2118,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2119,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2120,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2121,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2122,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2123,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2124,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2125,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2126,,,,The diagram below shows the object structure of the UI component.,teammates25
2127,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2128,,,,There are additional utility packages for preferences and the cli.,jabref2
2129,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
2130,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
2131,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2132,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2133,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2134,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2135,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
2136,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2137,,,,We use an event bus to publish events from the model to the other layers.,jabref12
2138,,,,We use an event bus to publish events from the model to the other layers.,jabref12
2139,,,,There are additional utility packages for preferences and the cli.,jabref2
2140,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2141,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2142,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2143,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2144,,,,We use an event bus to publish events from the model to the other layers.,jabref12
2145,,,,The Storage component does not perform any cascade delete/create operations.,teammates128
2146,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2147,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2148,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2149,,,,The Web API is protected by two layers of access control check.,teammates52
2150,,,,"Images (with few exceptions) are not provides by the WebUi, but are retrieved from the Image Provider service instead.",TeaStore7
2151,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2152,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2153,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2154,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2155,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2156,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2157,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2158,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2159,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
2160,,,,The Image Provider delivers images to the WebUI as base64 encoded strings to embed them in the final HTML.,TeaStore10
2161,,,,Sanitizing input values received from the UI component.,teammates81
2162,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2163,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
2164,,,,x.webapi contains system test cases for testing the user-invoked actions.,teammates179
2165,,,,"If the action is allowed, it will be performed, interacting with the Logic component as necessary.",teammates47
2166,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
2167,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2168,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2169,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2170,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2171,,,,We use an event bus to publish events from the model to the other layers.,jabref12
2172,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2173,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
2174,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2175,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2176,,,,"These datatransfer classes are in common.datatransfer package, to be explained later.",teammates127
2177,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2178,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
2179,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2180,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2181,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
2182,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2183,,,,"In particular, it is reponsible for the following.",teammates120
2184,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2185,,,,It matches the provided product ID or UI name (the filename for images not representing a product and therefore without product ID) and the image size to a unique image identifier.,TeaStore11
2186,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2187,,,,"These datatransfer classes are in common.datatransfer package, to be explained later.",teammates127
2188,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
2189,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2190,,,,We use an event bus to publish events from the model to the other layers.,jabref12
2191,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2192,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
2193,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
2194,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2195,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2196,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2197,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2198,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2199,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2200,,,,Hiding the complexities of datastore from the Logic component.,teammates122
2201,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2202,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
2203,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2204,,,,The Persistence service provides access to the data persisted in the relational database back-end.,TeaStore22
2205,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2206,,,,Hiding the complexities of datastore from the Logic component.,teammates122
2207,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2208,,,,storage.search contains classes for dealing with searching and indexing.,teammates133
2209,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2210,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2211,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2212,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
2213,,,,Hiding the complexities of datastore from the Logic component.,teammates122
2214,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2215,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2216,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
2217,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2218,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2219,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2220,,,,The following explains the use of the Test Driver.,teammates10
2221,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2222,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2223,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2224,,,,The cli package bundles classes that are responsible for JabRefâs command line interface.,jabref10
2225,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2226,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2227,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2228,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
2229,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2230,,,,Sanitizing input values received from the UI component.,teammates81
2231,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2232,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2233,,,,Cascade logic is handled by the Logic component.,teammates129
2234,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2235,,,,The Web API is protected by two layers of access control check.,teammates52
2236,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
2237,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2238,,,,We use an event bus to publish events from the model to the other layers.,jabref12
2239,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2240,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2241,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
2242,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2243,,,,Data is retrieved from the PersistenceProvider and product recommendations from the Recommender service.,TeaStore4
2244,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
2245,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2246,,,,We use an event bus to publish events from the model to the other layers.,jabref12
2247,,,,"The storage layer of the application uses the persistence framework provided by GAE Datastore, a NoSQL database.",teammates9
2248,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
2249,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
2250,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2251,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2252,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2253,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2254,,,,The diagram below shows the object structure of the UI component.,teammates25
2255,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2256,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
2257,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2258,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
2259,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2260,,,,We use an event bus to publish events from the model to the other layers.,jabref12
2261,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
2262,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
2263,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2264,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2265,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2266,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2267,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2268,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2269,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2270,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2271,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2272,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2273,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2274,,,,It is trained using all existing orders.,TeaStore28
2275,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2276,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2277,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2278,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2279,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2280,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2281,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2282,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2283,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2284,,,,The Storage component does not perform any cascade delete/create operations.,teammates128
2285,,,,"If the action is allowed, it will be performed, interacting with the Logic component as necessary.",teammates47
2286,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2287,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
2288,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2289,,,,"Logic API is represented by the classes Logic, GateKeeper, EmailGenerator, EmailSender, TaskQueuer.",teammates87
2290,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2291,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2292,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2293,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2294,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2295,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2296,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2297,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2298,,,,The diagram below shows the object structure of the UI component.,teammates25
2299,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2300,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2301,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2302,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2303,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
2304,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2305,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2306,,,,"As such, it also acts as a caching layer.",TeaStore26
2307,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
2308,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2309,,,,logic.core contains the core logic of the system.,teammates86
2310,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
2311,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2312,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
2313,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2314,,,,All GQL queries are to be contained inside the Storage component.,teammates123
2315,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2316,,,,The diagram below shows the object structure of the UI component.,teammates25
2317,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2318,,,,The Logic component handles the business logic of TEAMMATES.,teammates77
2319,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2320,,,,The Web API is protected by two layers of access control check.,teammates52
2321,,,,We use an event bus to publish events from the model to the other layers.,jabref12
2322,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2323,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
2324,,,,The WebUI service retrieves images from the Image Provider.,TeaStore2
2325,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
2326,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2327,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2328,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2329,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2330,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2331,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2332,,,,"The Storage component performs CRUD (Create, Read, Update, Delete) operations on data entities individually.",teammates118
2333,,,,Cascade logic is handled by the Logic component.,teammates129
2334,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2335,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2336,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2337,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2338,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
2339,,,,The diagram below shows the object structure of the UI component.,teammates25
2340,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
2341,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2342,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2343,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2344,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2345,,,,"These datatransfer classes are in common.datatransfer package, to be explained later.",teammates127
2346,,,,x.storage contains component test cases for testing the Storage component.,teammates177
2347,,,,The Image Provider delivers images to the WebUI as base64 encoded strings to embed them in the final HTML.,TeaStore10
2348,,,,Sanitizing input values received from the UI component.,teammates81
2349,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2350,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2351,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2352,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2353,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2354,,,,"Logic API is represented by the classes Logic, GateKeeper, EmailGenerator, EmailSender, TaskQueuer.",teammates87
2355,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
2356,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
2357,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2358,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2359,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2360,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2361,,,,"The Storage component performs CRUD (Create, Read, Update, Delete) operations on data entities individually.",teammates118
2362,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
2363,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2364,,,,The WebUI provides the TeaStore front-end using Servlets in combination with JSP files.,TeaStore5
2365,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2366,,,,The Client component can connect to the back end directly without using a Web browser.,teammates18
2367,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
2368,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2369,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2370,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2371,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2372,,,,"Instead, a corresponding non-persistent data transfer object named Attributes (e.g., CourseAttributes is the data transfer object for Course entities) object is returned.",teammates126
2373,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2374,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2375,,,,"Seventh, the corresponding AutomatedAction will be performed, interacting with the Logic component as necessary.",teammates68
2376,,,,We use an event bus to publish events from the model to the other layers.,jabref12
2377,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2378,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2379,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2380,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
2381,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2382,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2383,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2384,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2385,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2386,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2387,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2388,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2389,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2390,,,,x.search contains component test cases for testing the search functions.,teammates178
2391,,,,The diagram below shows the object structure of the UI component.,teammates25
2392,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2393,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2394,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2395,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
2396,,,,The Persistence service provides access to the data persisted in the relational database back-end.,TeaStore22
2397,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2398,,,,All GQL queries are to be contained inside the Storage component.,teammates123
2399,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2400,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2401,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2402,,,,x.webapi contains system test cases for testing the user-invoked actions.,teammates179
2403,,,,It matches the provided product ID or UI name (the filename for images not representing a product and therefore without product ID) and the image size to a unique image identifier.,TeaStore11
2404,,,,The Persistence service provides access to the data persisted in the relational database back-end.,TeaStore22
2405,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2406,,,,x.lnp contains load and performance tests (experimental).,teammates193
2407,,,,It is trained using all existing orders.,TeaStore28
2408,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2409,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
2410,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2411,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2412,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2413,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2414,,,,Sanitizing input values received from the UI component.,teammates81
2415,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2416,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2417,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2418,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2419,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
2420,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2421,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
2422,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2423,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2424,,,,"Package overview contains storage.api, storage.entity, storage.search.",teammates130
2425,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2426,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2427,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
2428,,,,The diagram below shows the object structure of the UI component.,teammates25
2429,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
2430,,,,The WebUI service retrieves images from the Image Provider.,TeaStore2
2431,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2432,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2433,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2434,,,,The diagram below shows the object structure of the UI component.,teammates25
2435,,,,Sanitizing input values received from the UI component.,teammates81
2436,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2437,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2438,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2439,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2440,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2441,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2442,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2443,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2444,,,,Sanitizing input values received from the UI component.,teammates81
2445,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2446,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2447,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
2448,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2449,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2450,,,,Sanitizing input values received from the UI component.,teammates81
2451,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2452,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2453,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
2454,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2455,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2456,,,,storage.api provides the API of the component to be accessed by the logic component.,teammates131
2457,,,,Logic is a Facade class which connects to the several Logic classes to handle the logic related to various types of data and to access data from the Storage component.,teammates88
2458,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2459,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
2460,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2461,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2462,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2463,,,,The diagram below shows the object structure of the UI component.,teammates25
2464,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2465,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
2466,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2467,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
2468,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
2469,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
2470,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2471,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2472,,,,The WebUI provides the TeaStore front-end using Servlets in combination with JSP files.,TeaStore5
2473,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
2474,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2475,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2476,,,,The diagram below shows the object structure of the UI component.,teammates25
2477,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2478,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2479,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2480,,,,The diagram below shows the object structure of the UI component.,teammates25
2481,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
2482,,,,"In particular, it is reponsible for the following.",teammates120
2483,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
2484,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2485,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2486,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
2487,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
2488,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2489,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2490,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2491,,,,The diagram below shows the object structure of the UI component.,teammates25
2492,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2493,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2494,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2495,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2496,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2497,,,,The Storage component does not perform any cascade delete/create operations.,teammates128
2498,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2499,,,,common.datatransfer package contains lightweight data transfer object classes for transferring data among components.,teammates160
2500,,,,"In particular, it is reponsible for the following.",teammates120
2501,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2502,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
2503,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2504,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2505,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2506,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2507,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2508,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2509,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
2510,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2511,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
2512,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2513,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2514,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
2515,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2516,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2517,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2518,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2519,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2520,,,,"The storage layer of the application uses the persistence framework provided by GAE Datastore, a NoSQL database.",teammates9
2521,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2522,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
2523,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2524,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2525,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2526,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2527,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
2528,,,,x.logic contains component test cases for testing the Logic component.,teammates176
2529,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2530,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2531,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
2532,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2533,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
2534,,,,storage.api provides the API of the component to be accessed by the logic component.,teammates131
2535,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
2536,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
2537,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
2538,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
2539,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2540,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
2541,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
2542,,,,x.logic contains component test cases for testing the Logic component.,teammates176
2543,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2544,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2545,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2546,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2547,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2548,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
2549,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2550,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2551,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
2552,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2553,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2554,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2555,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2556,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2557,,,,"If the action is allowed, it will be performed, interacting with the Logic component as necessary.",teammates47
2558,,,,"The Client component contains scripts that can connect directly to the application back-end for administrative purposes, such as migrating data to a new schema and calculating statistics.",teammates194
2559,,,,"The Storage component performs CRUD (Create, Read, Update, Delete) operations on data entities individually.",teammates118
2560,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2561,,,,Sanitizing input values received from the UI component.,teammates81
2562,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
2563,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2564,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
2565,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2566,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2567,,,,Entity already exists throws EntityAlreadyExistsException (escalated from Storage level).,teammates101
2568,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2569,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
2570,,,,x.logic contains component test cases for testing the Logic component.,teammates176
2571,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2572,,,,The Logic component handles the business logic of TEAMMATES.,teammates77
2573,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2574,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2575,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2576,,,,The Recommender is used to generate individual product recommendations for each user.,TeaStore27
2577,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2578,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2579,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2580,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2581,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2582,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2583,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2584,,,,"In particular, it is reponsible for the following.",teammates120
2585,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2586,,,,storage.api provides the API of the component to be accessed by the logic component.,teammates131
2587,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2588,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
2589,,,,"It features endpoints for general CRUD-Operations (Create, Read, Update, Delete) for the persistent entities.",TeaStore24
2590,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2591,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
2592,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2593,,,,"Seventh, the corresponding AutomatedAction will be performed, interacting with the Logic component as necessary.",teammates68
2594,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2595,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
2596,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2597,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
2598,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
2599,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2600,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
2601,,,,"Logic API is represented by the classes Logic, GateKeeper, EmailGenerator, EmailSender, TaskQueuer.",teammates87
2602,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2603,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
2604,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
2605,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2606,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
2607,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2608,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2609,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2610,,,,The Image Provider delivers images to the WebUI as base64 encoded strings to embed them in the final HTML.,TeaStore10
2611,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
2612,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
2613,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
2614,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2615,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
2616,,,,The WebUI provides the TeaStore front-end using Servlets in combination with JSP files.,TeaStore5
2617,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
2618,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
2619,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2620,,,,"Logic API is represented by the classes Logic, GateKeeper, EmailGenerator, EmailSender, TaskQueuer.",teammates87
2621,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
2622,,,,The Auth service handles user and session authentication.,TeaStore18
2623,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2624,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2625,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
2626,,,,It matches the provided product ID or UI name (the filename for images not representing a product and therefore without product ID) and the image size to a unique image identifier.,TeaStore11
2627,,,,The following explains the use of the Test Driver.,teammates10
2628,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2629,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2630,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
2631,,,,logic.core contains the core logic of the system.,teammates86
2632,,,,"In particular, it is reponsible for the following.",teammates120
2633,,,,common.datatransfer contains data transfer objects.,teammates159
2634,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2635,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
2636,,,,Sanitizing input values received from the UI component.,teammates81
2637,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2638,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
2639,,,,It matches the provided product ID or UI name (the filename for images not representing a product and therefore without product ID) and the image size to a unique image identifier.,TeaStore11
2640,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
2641,,,,It contains logic to save and retireve values from cookies.,TeaStore6
2642,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2643,,,,The WebUI service retrieves images from the Image Provider.,TeaStore2
2644,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2645,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2646,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2647,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2648,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2649,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2650,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2651,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2652,,,,x.logic contains component test cases for testing the Logic component.,teammates176
2653,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2654,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2655,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2656,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2657,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2658,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2659,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
2660,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
2661,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
2662,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2663,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2664,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2665,,,,storage.api provides the API of the component to be accessed by the logic component.,teammates131
2666,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2667,,,,"If the action is allowed, it will be performed, interacting with the Logic component as necessary.",teammates47
2668,,,,common.exceptions contains custom exceptions.,teammates158
2669,,,,Sanitizing input values received from the UI component.,teammates81
2670,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2671,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
2672,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2673,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2674,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
2675,,,,"If the product ID or UI name is not available to the Image Provider, a standard ""not found"" image will be delivered in the correct size.",TeaStore12
2676,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2677,,,,"Seventh, the corresponding AutomatedAction will be performed, interacting with the Logic component as necessary.",teammates68
2678,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
2679,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2680,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
2681,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2682,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
2683,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
2684,,,,We use an event bus to publish events from the model to the other layers.,jabref12
2685,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
2686,,,,x.storage contains component test cases for testing the Storage component.,teammates177
2687,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
2688,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2689,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2690,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2691,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
2692,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2693,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2694,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2695,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2696,,,,"Seventh, the corresponding AutomatedAction will be performed, interacting with the Logic component as necessary.",teammates68
2697,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2698,,,,"The storage layer of the application uses the persistence framework provided by GAE Datastore, a NoSQL database.",teammates9
2699,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2700,,,,All GQL queries are to be contained inside the Storage component.,teammates123
2701,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2702,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2703,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
2704,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2705,,,,Sanitizing input values received from the UI component.,teammates81
2706,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2707,,,,The UI provides a status page at link indicating the current state of the TeaStore.,TeaStore8
2708,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2709,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2710,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2711,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2712,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2713,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2714,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2715,,,,"The Client component contains scripts that can connect directly to the application back-end for administrative purposes, such as migrating data to a new schema and calculating statistics.",teammates194
2716,,,,All GQL queries are to be contained inside the Storage component.,teammates123
2717,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
2718,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
2719,,,,"The storage layer of the application uses the persistence framework provided by GAE Datastore, a NoSQL database.",teammates9
2720,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2721,,,,The persistence provider uses a second level entity cache provided by the JPA implementation.,TeaStore25
2722,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2723,,,,Hiding the complexities of datastore from the Logic component.,teammates122
2724,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2725,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2726,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
2727,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
2728,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2729,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2730,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2731,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2732,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
2733,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2734,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2735,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2736,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
2737,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2738,,,,"If the product ID or UI name is not available to the Image Provider, a standard ""not found"" image will be delivered in the correct size.",TeaStore12
2739,,,,Sanitizing input values received from the UI component.,teammates81
2740,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
2741,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2742,,,,All GQL queries are to be contained inside the Storage component.,teammates123
2743,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
2744,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2745,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
2746,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
2747,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
2748,,,,common.datatransfer package contains lightweight data transfer object classes for transferring data among components.,teammates160
2749,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
2750,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2751,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2752,,,,x.webapi contains system test cases for testing the user-invoked actions.,teammates179
2753,,,,"If the action is allowed, it will be performed, interacting with the Logic component as necessary.",teammates47
2754,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
2755,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2756,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
2757,,,,"If the action is allowed, it will be performed, interacting with the Logic component as necessary.",teammates47
2758,,,,Sanitizing input values received from the UI component.,teammates81
2759,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
2760,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2761,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2762,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2763,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
2764,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2765,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
2766,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
2767,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2768,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2769,,,,"As such, it also acts as a caching layer.",TeaStore26
2770,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2771,,,,Sanitizing input values received from the UI component.,teammates81
2772,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2773,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
2774,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2775,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2776,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
2777,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2778,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2779,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
2780,,,,The Logic component handles the business logic of TEAMMATES.,teammates77
2781,,,,All GQL queries are to be contained inside the Storage component.,teammates123
2782,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
2783,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2784,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2785,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2786,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2787,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
2788,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
2789,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2790,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2791,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2792,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2793,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2794,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2795,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
2796,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2797,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2798,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2799,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2800,,,,x.storage contains component test cases for testing the Storage component.,teammates177
2801,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2802,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2803,,,,Every running instance of the TeaStore uses one single registry.,TeaStore41
2804,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2805,,,,Sanitizing input values received from the UI component.,teammates81
2806,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2807,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2808,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2809,,,,Hiding the complexities of datastore from the Logic component.,teammates122
2810,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2811,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
2812,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2813,,,,All GQL queries are to be contained inside the Storage component.,teammates123
2814,,,,common.datatransfer contains data transfer objects.,teammates159
2815,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2816,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
2817,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2818,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2819,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2820,,,,The Registry provides information about how many service instances are online for each service and where they are located.,TeaStore37
2821,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2822,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2823,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2824,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2825,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2826,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2827,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2828,,,,Entity already exists throws EntityAlreadyExistsException (escalated from Storage level).,teammates101
2829,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2830,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
2831,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2832,,,,Entity already exists throws EntityAlreadyExistsException (escalated from Storage level).,teammates101
2833,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2834,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2835,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2836,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2837,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2838,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2839,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2840,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2841,,,,Cascade logic is handled by the Logic component.,teammates129
2842,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2843,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
2844,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
2845,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2846,,,,The Logic component handles the business logic of TEAMMATES.,teammates77
2847,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2848,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2849,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2850,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2851,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2852,,,,"The Storage component performs CRUD (Create, Read, Update, Delete) operations on data entities individually.",teammates118
2853,,,,storage.api provides the API of the component to be accessed by the logic component.,teammates131
2854,,,,common.datatransfer contains data transfer objects.,teammates159
2855,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2856,,,,The Registry provides information about how many service instances are online for each service and where they are located.,TeaStore37
2857,,,,"Package overview contains logic.api, logic.core.",teammates84
2858,,,,Sanitizing input values received from the UI component.,teammates81
2859,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2860,,,,The WebUI provides the TeaStore front-end using Servlets in combination with JSP files.,TeaStore5
2861,,,,We use an event bus to publish events from the model to the other layers.,jabref12
2862,,,,storage.search contains classes for dealing with searching and indexing.,teammates133
2863,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2864,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
2865,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2866,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2867,,,,The Web API is protected by two layers of access control check.,teammates52
2868,,,,Sanitizing input values received from the UI component.,teammates81
2869,,,,The Logic component handles the business logic of TEAMMATES.,teammates77
2870,,,,Data is retrieved from the PersistenceProvider and product recommendations from the Recommender service.,TeaStore4
2871,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2872,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
2873,,,,Sanitizing input values received from the UI component.,teammates81
2874,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2875,,,,The diagram below shows the object structure of the UI component.,teammates25
2876,,,,There are additional utility packages for preferences and the cli.,jabref2
2877,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
2878,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
2879,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
2880,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
2881,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2882,,,,common.datatransfer contains data transfer objects.,teammates159
2883,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
2884,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
2885,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2886,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
2887,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
2888,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2889,,,,The Persistence service provides access to the data persisted in the relational database back-end.,TeaStore22
2890,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2891,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
2892,,,,Hiding the complexities of datastore from the Logic component.,teammates122
2893,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2894,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
2895,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2896,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2897,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2898,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2899,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2900,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2901,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2902,,,,The diagram below shows the object structure of the UI component.,teammates25
2903,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2904,,,,The WebUI service retrieves images from the Image Provider.,TeaStore2
2905,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2906,,,,common.util contains utility classes.,teammates157
2907,,,,All GQL queries are to be contained inside the Storage component.,teammates123
2908,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2909,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
2910,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2911,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2912,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
2913,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
2914,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
2915,,,,"If the product ID or UI name is not available to the Image Provider, a standard ""not found"" image will be delivered in the correct size.",TeaStore12
2916,,,,"Package overview contains logic.api, logic.core.",teammates84
2917,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
2918,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2919,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2920,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
2921,,,,We use an event bus to publish events from the model to the other layers.,jabref12
2922,,,,We use an event bus to publish events from the model to the other layers.,jabref12
2923,,,,"The Storage component performs CRUD (Create, Read, Update, Delete) operations on data entities individually.",teammates118
2924,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2925,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2926,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
2927,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
2928,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2929,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2930,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2931,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
2932,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2933,,,,We use an event bus to publish events from the model to the other layers.,jabref12
2934,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2935,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2936,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2937,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2938,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2939,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2940,,,,"Logic API is represented by the classes Logic, GateKeeper, EmailGenerator, EmailSender, TaskQueuer.",teammates87
2941,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2942,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2943,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2944,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2945,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2946,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2947,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2948,,,,"If the product ID or UI name is not available to the Image Provider, a standard ""not found"" image will be delivered in the correct size.",TeaStore12
2949,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2950,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2951,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2952,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2953,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2954,,,,The diagram below shows the object structure of the UI component.,teammates25
2955,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2956,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
2957,,,,storage.api provides the API of the component to be accessed by the logic component.,teammates131
2958,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2959,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2960,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2961,,,,Sanitizing input values received from the UI component.,teammates81
2962,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
2963,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
2964,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2965,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2966,,,,It matches the provided product ID or UI name (the filename for images not representing a product and therefore without product ID) and the image size to a unique image identifier.,TeaStore11
2967,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2968,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2969,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
2970,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
2971,,,,x.lnp contains load and performance tests (experimental).,teammates193
2972,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2973,,,,It maps the relational entities to the JSON entity objects passed between services using the EclipseLink JPA ORM mapper.,TeaStore23
2974,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
2975,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2976,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2977,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2978,,,,x.storage contains component test cases for testing the Storage component.,teammates177
2979,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2980,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
2981,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
2982,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
2983,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
2984,,,,The diagram below shows the object structure of the UI component.,teammates25
2985,,,,This UI is a single HTML page generated by Angular framework.,teammates5
2986,,,,Sanitizing input values received from the UI component.,teammates81
2987,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
2988,,,,common.datatransfer contains data transfer objects.,teammates159
2989,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
2990,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2991,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2992,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2993,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
2994,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
2995,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
2996,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
2997,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
2998,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
2999,,,,We use an event bus to publish events from the model to the other layers.,jabref12
3000,,,,Sanitizing input values received from the UI component.,teammates81
3001,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
3002,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
3003,,,,The diagram below shows the object structure of the UI component.,teammates25
3004,,,,The Web API is protected by two layers of access control check.,teammates52
3005,,,,Hiding the complexities of datastore from the Logic component.,teammates122
3006,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
3007,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3008,,,,This UI is a single HTML page generated by Angular framework.,teammates5
3009,,,,Sanitizing input values received from the UI component.,teammates81
3010,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
3011,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
3012,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
3013,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3014,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3015,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3016,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
3017,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
3018,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3019,,,,"These datatransfer classes are in common.datatransfer package, to be explained later.",teammates127
3020,,,,Sanitizing input values received from the UI component.,teammates81
3021,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
3022,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3023,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
3024,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
3025,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3026,,,,"The Client component contains scripts that can connect directly to the application back-end for administrative purposes, such as migrating data to a new schema and calculating statistics.",teammates194
3027,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3028,,,,"Logic API is represented by the classes Logic, GateKeeper, EmailGenerator, EmailSender, TaskQueuer.",teammates87
3029,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
3030,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3031,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
3032,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
3033,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
3034,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
3035,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3036,,,,Hiding the complexities of datastore from the Logic component.,teammates122
3037,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
3038,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
3039,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3040,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
3041,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
3042,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
3043,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3044,,,,We use an event bus to publish events from the model to the other layers.,jabref12
3045,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3046,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3047,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3048,,,,We use an event bus to publish events from the model to the other layers.,jabref12
3049,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3050,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
3051,,,,Sanitizing input values received from the UI component.,teammates81
3052,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
3053,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
3054,,,,There are additional utility packages for preferences and the cli.,jabref2
3055,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
3056,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
3057,,,,"Package overview contains logic.api, logic.core.",teammates84
3058,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
3059,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3060,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3061,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
3062,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
3063,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3064,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
3065,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
3066,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
3067,,,,This UI is a single HTML page generated by Angular framework.,teammates5
3068,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
3069,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
3070,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3071,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3072,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
3073,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3074,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3075,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
3076,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
3077,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3078,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
3079,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3080,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
3081,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3082,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
3083,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3084,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3085,,,,common.datatransfer package contains lightweight data transfer object classes for transferring data among components.,teammates160
3086,,,,"If the action is allowed, it will be performed, interacting with the Logic component as necessary.",teammates47
3087,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3088,,,,The Web API is protected by two layers of access control check.,teammates52
3089,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
3090,,,,common.datatransfer package contains lightweight data transfer object classes for transferring data among components.,teammates160
3091,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
3092,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3093,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3094,,,,"The storage layer of the application uses the persistence framework provided by GAE Datastore, a NoSQL database.",teammates9
3095,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3096,,,,This UI is a single HTML page generated by Angular framework.,teammates5
3097,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
3098,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3099,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
3100,,,,x.logic contains component test cases for testing the Logic component.,teammates176
3101,,,,client.util contains helpers needed for client scripts.,teammates196
3102,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
3103,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3104,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3105,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3106,,,,"These datatransfer classes are in common.datatransfer package, to be explained later.",teammates127
3107,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
3108,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3109,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3110,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3111,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3112,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
3113,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
3114,,,,"In particular, it is reponsible for the following.",teammates120
3115,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3116,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
3117,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3118,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
3119,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
3120,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
3121,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3122,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
3123,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
3124,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
3125,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
3126,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
3127,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
3128,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3129,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3130,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
3131,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3132,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3133,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3134,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3135,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3136,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
3137,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3138,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
3139,,,,"Second, WebApiServlet uses the ActionFactory to generate the matching Action object, e.g. InstructorHomePageAction.",teammates44
3140,,,,The WebUI provides the TeaStore front-end using Servlets in combination with JSP files.,TeaStore5
3141,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3142,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3143,,,,common.datatransfer contains data transfer objects.,teammates159
3144,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3145,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
3146,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
3147,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3148,,,,The E2E component has no knowledge of the internal workings of the application and can only interact either with Web browser as a whole application or REST API calls for the back-end logic.,teammates185
3149,,,,"The Storage component performs CRUD (Create, Read, Update, Delete) operations on data entities individually.",teammates118
3150,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3151,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3152,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
3153,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
3154,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3155,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
3156,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3157,,,,"The storage layer of the application uses the persistence framework provided by GAE Datastore, a NoSQL database.",teammates9
3158,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3159,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3160,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
3161,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3162,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3163,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
3164,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3165,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
3166,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3167,,,,Cascade logic is handled by the Logic component.,teammates129
3168,,,,The diagram below shows the object structure of the UI component.,teammates25
3169,,,,Sanitizing input values received from the UI component.,teammates81
3170,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
3171,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
3172,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3173,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
3174,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
3175,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
3176,,,,The E2E end-to-end component is used to interact with the application as a whole with Web browsers.,teammates15
3177,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
3178,,,,common.datatransfer contains data transfer objects.,teammates159
3179,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
3180,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
3181,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
3182,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
3183,,,,Sanitizing input values received from the UI component.,teammates81
3184,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
3185,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
3186,,,,The Common component contains common utilities used across TEAMMATES.,teammates155
3187,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3188,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3189,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3190,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3191,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3192,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
3193,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3194,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3195,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
3196,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
3197,,,,x.util contains component test cases for testing the utility classes from the Common component.,teammates175
3198,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
3199,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3200,,,,"In particular, it is responsible for the following.",teammates78
3201,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
3202,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
3203,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3204,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3205,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3206,,,,All GQL queries are to be contained inside the Storage component.,teammates123
3207,,,,We use an event bus to publish events from the model to the other layers.,jabref12
3208,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
3209,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3210,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
3211,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3212,,,,"In particular, it is responsible for the following.",teammates78
3213,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3214,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3215,,,,Data is retrieved from the PersistenceProvider and product recommendations from the Recommender service.,TeaStore4
3216,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3217,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3218,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3219,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3220,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3221,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3222,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3223,,,,Logic is a Facade class which connects to the several Logic classes to handle the logic related to various types of data and to access data from the Storage component.,teammates88
3224,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
3225,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
3226,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3227,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
3228,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3229,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
3230,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
3231,,,,"Second, custom filters are applied according to the order specified in web.xml, e.g. OriginCheckFilter.",teammates32
3232,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
3233,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
3234,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3235,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3236,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3237,,,,The UI component is the first stop for 99% of all requests that are received by the application.,teammates29
3238,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3239,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3240,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3241,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
3242,,,,The diagram below shows the object structure of the UI component.,teammates25
3243,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3244,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3245,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
3246,,,,x.logic contains component test cases for testing the Logic component.,teammates176
3247,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
3248,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3249,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
3250,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
3251,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3252,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3253,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3254,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
3255,,,,"The Common component contains utility code (data transfer objects, helper classes, etc.) used across the application.",teammates20
3256,,,,Sanitizing input values received from the UI component.,teammates81
3257,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
3258,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3259,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3260,,,,The Image Provider delivers images to the WebUI as base64 encoded strings to embed them in the final HTML.,TeaStore10
3261,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3262,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
3263,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
3264,,,,x.logic contains component test cases for testing the Logic component.,teammates176
3265,,,,We use an event bus to publish events from the model to the other layers.,jabref12
3266,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3267,,,,"Sub-packages contains x.testdriver, x.datatransfer, x.util, x.logic, x.storage, x.search, x.webapi, x.automated.",teammates172
3268,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3269,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3270,,,,logic.api provides the API of the component to be accessed by the UI.,teammates85
3271,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
3272,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
3273,,,,x.logic contains component test cases for testing the Logic component.,teammates176
3274,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3275,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
3276,,,,"Package overview contains common.util, common.exceptions, common.datatransfer.",teammates156
3277,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3278,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
3279,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
3280,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3281,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3282,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
3283,,,,All GQL queries are to be contained inside the Storage component.,teammates123
3284,,,,EmailGenerator generates emails to be sent.,teammates90
3285,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3286,,,,"Architecture contains UI Component, Logic Component, Storage Component, Common Component, Test Driver Component, E2E Component, Client Component.",teammates1
3287,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3288,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3289,,,,In the UI Server the entry point for the application back end logic is designed as a REST-ful controller.,teammates7
3290,,,,common.datatransfer package contains lightweight data transfer object classes for transferring data among components.,teammates160
3291,,,,x.datatransfer contains component test cases for testing the datatransfer objects from the Common component.,teammates174
3292,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3293,,,,Entity already exists throws EntityAlreadyExistsException (escalated from Storage level).,teammates101
3294,,,,"Package overview contains e2e.util, e2e.pageobjects, e2e.cases, x.util, x.e2e, x.lnp.",teammates187
3295,,,,"logic, ui.website, ui.controller represent an application of Model-View-Controller pattern.",teammates22
3296,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
3297,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3298,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3299,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
3300,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3301,,,,It maps the relational entities to the JSON entity objects passed between services using the EclipseLink JPA ORM mapper.,TeaStore23
3302,,,,The Auth service handles user and session authentication.,TeaStore18
3303,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
3304,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
3305,,,,The UI is expected to check access control (using GateKeeper class) before calling a method in the Logic.,teammates97
3306,,,,It matches the provided product ID or UI name (the filename for images not representing a product and therefore without product ID) and the image size to a unique image identifier.,TeaStore11
3307,,,,"We have been successfully transitioning from a spaghetti to a more structured architecture with the model in the center, and the logic as an intermediate layer towards the gui which is the outer shell.",jabref1
3308,,,,e2e.util contains helpers needed for running E2E tests.,teammates188
3309,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3310,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3311,,,,"The model represents the most important data structures (BibDatases, BibEntries, Events, and related aspects) and has only a little bit of logic attached.",jabref5
3312,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
3313,,,,The Image Provider delivers images to the WebUI as base64 encoded strings to embed them in the final HTML.,TeaStore10
3314,,,,"The UI Browser seen by users consists of Web pages containing HTML, CSS for styling and JavaScript for client-side interactions such as sorting, input validation, etc..",teammates4
3315,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
3316,,,,The model should have no dependencies to other classes of JabRef and the logic should only depend on model classes.,jabref9
3317,,,,Only the gui knows the user and his preferences and can interact with him to help him solve tasks.,jabref7
3318,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3319,,,,"We have JUnit tests to detect violations of the most crucial dependencies (between logic, model, and gui), and the build will fail automatically in these cases.",jabref4
3320,,,,"The logic is responsible for reading/writing/importing/exporting and manipulating the model, and it is structured often as an API the gui can call and use.",jabref6
